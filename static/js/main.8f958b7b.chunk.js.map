{"version":3,"sources":["utils/client.js","assets/spacex.svg","components/Landing.js","queries/getLaunchData.js","assets/960x0.jpeg","components/PastListItems.js","components/LaunchDashboard.js","queries/getPastMission.js","components/PastMissionModal.js","App.js","index.js"],"names":["process","REACT_APP_STEPZEN_API_KEY","REACT_APP_STEPZEN_ENDPOINT","client","ApolloClient","headers","Authorization","uri","Landing","id","src","spaceXLogo","alt","to","GET_LAUNCH_DATA","gql","PastListItems","item","style","textDecoration","name","date_local","slice","PanelData","useQuery","data","loading","error","missions","past","message","reverse","map","LaunchDashboard","color","speed","href","SpaceXLogo","MissionImgPlaceholder","className","next","rocketId","location","full_name","details","GET_PAST_MISSION","missionId","useParams","variables","mission","webcast","target","App","path","component","PastMissionModal","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8f958b7b.chunk.js","sourcesContent":["import ApolloClient from \"apollo-boost\";\n\nconst { REACT_APP_STEPZEN_API_KEY, REACT_APP_STEPZEN_ENDPOINT } = process.env;\n\nexport const client = new ApolloClient({\n  headers: {\n    Authorization: `Apikey ${REACT_APP_STEPZEN_API_KEY}`,\n  },\n  uri: REACT_APP_STEPZEN_ENDPOINT,\n});\n","export default __webpack_public_path__ + \"static/media/spacex.07853917.svg\";","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { IoArrowForwardCircleOutline } from \"react-icons/io5\";\nimport spaceXLogo from \"../assets/spacex.svg\";\n\nconst Landing = () => {\n  return (\n    <div id=\"landingPage\">\n      <div id=\"title\">\n        <img src={spaceXLogo} id=\"landingLogo\" alt=\"SpaceX Logo\" />\n        <h1 id=\"landingSubheading\">Launch Schedule</h1>\n      </div>\n      <div>\n        <Link to=\"/launch-dashboard\">\n          <IoArrowForwardCircleOutline id=\"startArrow\" />\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Landing;\n","import { gql } from \"apollo-boost\";\n\nexport const GET_LAUNCH_DATA = gql`\n  query getLaunchData {\n    next {\n      name\n      date_local\n      rocket\n      rocketId {\n        id\n        name\n      }\n      launchpad\n      location {\n        full_name\n        id\n        locality\n      }\n      details\n      id\n      webcast\n      patch\n    }\n    past {\n      name\n      date_local\n      rocket\n      rocketId {\n        id\n        name\n      }\n      launchpad\n      location {\n        full_name\n        id\n        locality\n      }\n      details\n      id\n      webcast\n      patch\n    }\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/960x0.b3c23036.jpeg\";","import React, { useEffect, useState } from \"react\";\nimport { Link, BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { GET_LAUNCH_DATA } from \"../queries/getLaunchData\";\n\nimport { RiArrowRightSLine } from \"react-icons/ri\";\n\nconst PastListItems = ({ item }) => {\n  return (\n    <div id=\"listItemContainer\">\n      <Link\n        to={`/missions/${item.id}`}\n        id=\"listItemLink\"\n        style={{ textDecoration: \"none\" }}\n      >\n        <div id=\"listText\">\n          <h2>{item.name}</h2>\n          <h3>\n            {item.date_local.slice(0, 10)}, {item.date_local.slice(11, 16)}\n          </h3>\n        </div>\n        <div id=\"caratContainer\">\n          <RiArrowRightSLine id=\"listCarat\" />\n        </div>\n      </Link>\n    </div>\n  );\n};\n\nconst PanelData = () => {\n  const { data, loading, error } = useQuery(GET_LAUNCH_DATA);\n\n  const missions = data.past;\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>{error.message}</p>;\n  if (!data) return null;\n\n  return (\n    <div>\n      {missions\n        .slice(0)\n        .reverse()\n        .map((item, id) => (\n          <PastListItems key={id} item={item} />\n        ))}\n    </div>\n  );\n};\n\nexport { PastListItems, PanelData };\n","import React, { useEffect, useState } from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { GET_LAUNCH_DATA } from \"../queries/getLaunchData\";\n\nimport SpaceXLogo from \"../assets/spacex.svg\";\nimport MissionImgPlaceholder from \"../assets/960x0.jpeg\";\nimport { RiArrowGoBackLine } from \"react-icons/ri\";\nimport { SolarSystemLoading } from \"react-loadingg\";\nimport { PanelData } from \"./PastListItems\";\n\nconst LaunchDashboard = () => {\n  const { data, loading, error } = useQuery(GET_LAUNCH_DATA);\n\n  //   useEffect(() => {\n  //     console.log(data);\n  //   }, [data]);\n\n  if (loading) return <SolarSystemLoading color=\"#ffffff\" speed={1.5} />;\n  if (error) return <p>{error.message}</p>;\n  if (!data) return null;\n\n  return (\n    <div id=\"dashboardPage\">\n      <div id=\"header\">\n        <div id=\"headerLeft\">\n          <a href=\"/\" id=\"homeLink\">\n            <img src={SpaceXLogo} alt=\"SpaceX Logo\" />\n            <h3>Launch Schedule</h3>\n          </a>\n        </div>\n        <div id=\"headerRight\">\n          <a href=\"/\">\n            <RiArrowGoBackLine id=\"backToTitle\" />\n          </a>\n        </div>\n      </div>\n      <div id=\"missionContainers\">\n        <div id=\"pastMissions\">\n          <h2>Past_Missions</h2>\n          <div id=\"listItemsContainer\">\n            <PanelData />\n          </div>\n        </div>\n        <div id=\"upcomingMission\">\n          <h1>Upcoming_Mission</h1>\n          <div id=\"blockOne\">\n            <div id=\"imageContainer\">\n              <img\n                src={MissionImgPlaceholder}\n                id=\"missionImage\"\n                alt=\"Falcon 9 launch\"\n              />\n            </div>\n            <div id=\"mainStats\">\n              <h4 className=\"statHeading\">MISSION_NAME</h4>\n              <h5 className=\"statFigure\">{data.next[0].name}</h5>\n              <h4 className=\"statHeading\">LAUNCH_DATE</h4>\n              <h5 className=\"statFigure\">\n                {data.next[0].date_local.slice(0, 10)},{\" \"}\n                {data.next[0].date_local.slice(11, 16)}\n              </h5>\n              <h4 className=\"statHeading\">ROCKET</h4>\n              <h5 className=\"statFigure\">{data.next[0].rocketId.name}</h5>\n              <h4 className=\"statHeading\">LAUNCH_SITE</h4>\n              <h5 className=\"statFigure\">{data.next[0].location.full_name}</h5>\n            </div>\n          </div>\n          <div id=\"blockTwo\">\n            <div id=\"missionDetails\">\n              <h4 className=\"detailsHeading\">LAUNCH_DETAILS</h4>\n              <p className=\"detailsBody\">{data.next[0].details}</p>\n            </div>\n            <div id=\"buttonContainer\">\n              <div id=\"watchLiveButton\">\n                <p>WATCH LIVE</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LaunchDashboard;\n","import { gql } from \"apollo-boost\";\n\nexport const GET_PAST_MISSION = gql`\n  query MyQuery($missionId: String!) {\n    mission(id: $missionId) {\n      id\n      date_local\n      details\n      launchpad\n      location {\n        full_name\n        id\n        locality\n      }\n      name\n      rocket\n      rocketId {\n        id\n        name\n      }\n      webcast\n      patch\n    }\n  }\n`;\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { GET_PAST_MISSION } from \"../queries/getPastMission\";\n\nimport SpaceXLogo from \"../assets/spacex.svg\";\nimport MissionImgPlaceholder from \"../assets/960x0.jpeg\";\nimport { RiCloseCircleFill } from \"react-icons/ri\";\nimport { SolarSystemLoading } from \"react-loadingg\";\n\nconst LaunchDashboard = () => {\n  let { missionId } = useParams();\n\n  const { data, loading, error } = useQuery(GET_PAST_MISSION, {\n    variables: { missionId },\n  });\n\n  //   useEffect(() => {\n  //     console.log(data);\n  //   }, [data]);\n\n  if (loading) return <SolarSystemLoading color=\"#ffffff\" speed={1.5} />;\n  if (error) return <p>{error.message}</p>;\n  if (!data) return null;\n\n  return (\n    <div id=\"dashboardPage\">\n      <div id=\"header\">\n        <div id=\"headerLeft\">\n          <a href=\"/\" id=\"homeLink\">\n            <img src={SpaceXLogo} alt=\"SpaceX Logo\" />\n            <h3>Launch Schedule</h3>\n          </a>\n        </div>\n        <div id=\"headerRight\">\n          <a href=\"/launch-dashboard\">\n            <RiCloseCircleFill id=\"backToTitle\" />\n          </a>\n        </div>\n      </div>\n      <div id=\"pastMissionContainer\">\n        <div id=\"upcomingMission\">\n          <h1>{data.mission.name}_Mission</h1>\n          <div id=\"blockOne\">\n            <div id=\"imageContainer\">\n              <img\n                src={MissionImgPlaceholder}\n                id=\"missionImage\"\n                alt=\"Falcon 9 launch\"\n              />\n            </div>\n            <div id=\"mainStats\">\n              <h4 className=\"statHeading\">MISSION_NAME</h4>\n              <h5 className=\"statFigure\">{data.mission.name}</h5>\n              <h4 className=\"statHeading\">LAUNCH_DATE</h4>\n              <h5 className=\"statFigure\">\n                {data.mission.date_local.slice(0, 10)},{\" \"}\n                {data.mission.date_local.slice(11, 16)}\n              </h5>\n              <h4 className=\"statHeading\">ROCKET</h4>\n              <h5 className=\"statFigure\">{data.mission.rocketId.name}</h5>\n              <h4 className=\"statHeading\">LAUNCH_SITE</h4>\n              <h5 className=\"statFigure\">{data.mission.location.full_name}</h5>\n            </div>\n          </div>\n          <div id=\"blockTwo\">\n            <div id=\"missionDetails\">\n              <h4 className=\"detailsHeading\">LAUNCH_DETAILS</h4>\n              <p className=\"detailsBody\">{data.mission.details}</p>\n            </div>\n            <div id=\"buttonContainer\">\n              <a href={data.mission.webcast} target=\"_blank\" id=\"webcastLink\">\n                <div id=\"watchLiveButton\">\n                  <p>WATCH LIVE</p>\n                </div>\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LaunchDashboard;\n","import React from \"react\";\nimport \"./sass/App.scss\";\n\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport { client } from \"./utils/client\";\n\nimport Landing from \"./components/Landing\";\nimport LaunchDashboard from \"./components/LaunchDashboard\";\nimport PastMissionModal from \"./components/PastMissionModal\";\n\nconst App = () => {\n  return (\n    <div>\n      <Router>\n        <ApolloProvider client={client}>\n          <Switch>\n            <Route path=\"/launch-dashboard\" component={LaunchDashboard} />\n            <Route path=\"/missions/:missionId\" component={PastMissionModal} />\n            <Route path=\"/\" component={Landing} />\n          </Switch>\n        </ApolloProvider>\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}